---
import type { BlogData } from "@/lib/types";
import { BlogTitleEditor } from "@/components/Editing/BlogTitleEditor";
import { icons } from "@/components/Editing/icons";
import CreateBlogButton from "./Blog/CreateBlogButton.astro";

interface Props {
  userBlogs: BlogData[];
  currentBlog?: BlogData;
  lang: string;
  editing: boolean;
}

const { userBlogs, currentBlog, lang, editing } = Astro.props;

const isAuthorized = Boolean(currentBlog?.user_id);
const hasBlogs = userBlogs.length > 0;
---

<div class="relative w-fit min-w-[120px]">
  {
    !editing ? (
      <>
        <button
          id="blog-selector-btn"
          class="w-full flex items-center justify-between gap-2 px-4 text-xs bg-white/30 dark:bg-zinc-700/20 backdrop-blur-md rounded-lg shadow-md border border-gray-100/50 dark:border-gray-800/50 transition-all duration-300 ease-in-out hover:bg-white/40 dark:hover:bg-zinc-700/30 hover:border-primary-400/50 dark:hover:border-primary-400/50 hover:shadow-lg"
        >
          <div class="flex items-center gap-2">
            <span set:html={icons.dashboard} />
            <BlogTitleEditor
              {isAuthorized}
              blogId={String(currentBlog?.id)}
              initialTitle={currentBlog?.title || ""}
              style="background: transparent; z-index: 2;"
            />
          </div>
          <span set:html={icons.breadCrumbArrow} />
        </button>
      </>
    ) : (
      <>
        <a
          href={`/${lang}/dashboard/${currentBlog?.id}`}
          class="w-full flex items-center justify-between gap-2 px-4 text-xs bg-white/30 dark:bg-zinc-700/20 backdrop-blur-md rounded-lg shadow-md border border-gray-100/50 dark:border-gray-800/50 transition-all duration-300 ease-in-out hover:bg-white/40 dark:hover:bg-zinc-700/30 hover:border-primary-400/50 dark:hover:border-primary-400/50 hover:shadow-lg"
        >
          <div class="flex items-center gap-2">
            <span set:html={icons.dashboard} />
            <span class="p-3">{currentBlog?.title}</span>
          </div>
          <span set:html={icons.breadCrumbArrow} />
        </a>
      </>
    )
  }

  <div
    id="blog-selector-dropdown"
    class="hidden fixed left-0 right-0 md:left-[-45%] xl:left-[-65%] 2xl:left-[-50%] top-16 w-full max-w-fit mx-auto bg-white/95 dark:bg-gray-900/95 backdrop-blur-md shadow-lg border-t border-gray-100/50 dark:border-gray-800/50 rounded-b-lg transition-all duration-300 ease-in-out z-[100]"
  >
    {
      (isAuthorized ? userBlogs : [currentBlog]).map((blog) => (
        <a
          href={`/${lang}/dashboard/${blog?.id}`}
          class="flex items-center gap-2 p-4 text-xs text-gray-700 dark:text-gray-200 hover:bg-white/50 dark:hover:bg-zinc-600/40 border-b border-gray-100/10 dark:border-gray-800/10 last:border-0"
        >
          <span set:html={icons.dashboard} />
          <span class="truncate">{blog?.title || "Untitled Blog"}</span>
        </a>
      ))
    }
    <div class="*:w-full">
      <CreateBlogButton
        {isAuthorized}
        {lang}
        {hasBlogs}
        userId={String(currentBlog?.user_id)}
      />
    </div>
  </div>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const button = document.getElementById("blog-selector-btn");
    const dropdown = document.getElementById("blog-selector-dropdown");

    if (button && dropdown) {
      button.addEventListener("click", (e) => {
        e.stopPropagation();
        dropdown.classList.toggle("hidden");
      });

      // Close dropdown when clicking outside
      document.addEventListener("click", (e: any) => {
        if (!dropdown.contains(e.target) && !button.contains(e.target)) {
          dropdown.classList.add("hidden");
        }
      });

      // Close dropdown when pressing Escape
      document.addEventListener("keydown", (e: any) => {
        if (e.key === "Escape") {
          dropdown.classList.add("hidden");
        }
      });
    }
  });
</script>
