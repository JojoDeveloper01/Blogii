---
import { getLangFromUrl } from "@/i18n/utils";
import Layout from "@/layouts/Layout.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "@/lib/consts";
import { getUser, getUserById } from "@/lib/utilsDB";
import { EditableField } from "@/components/EditableProfile";
import ConfirmDialog from "@/components/shared/ConfirmDialog.astro";

const lang = getLangFromUrl(Astro.url);
const user = await getUser(Astro);

if (!user) return Astro.redirect(`/${lang}/`);

const userId = user.id;
---

<Layout title={SITE_TITLE} description={SITE_DESCRIPTION} {lang}>
  <section class="relative min-h-screen py-10 px-4 text-[--blanc-core]">
    <div
      class="max-w-7xl mx-auto grid gap-8 md:grid-cols-[300px_1fr] lg:grid-cols-[350px_1fr]"
    >
      <!-- Coluna da Esquerda: Foto e Info Básica -->
      <aside class="md:sticky md:top-10 space-y-8 h-fit">
        <div
          class="bg-white/30 dark:bg-gray-800/30 backdrop-blur-sm rounded-lg shadow-lg shadow-[--primary]/10 p-6 md:p-8border-2 border border-gray-200/10"
        >
          <h2
            class="text-xl md:text-2xl font-bold mb-6 text-black dark:text-white"
          >
            Foto de Perfil
          </h2>
          <div class="space-y-6">
            <EditableField
              userID={user.id}
              field="avatar_url"
              name="Foto de Perfil"
              type="url"
              value={user.avatar_url}
            />
          </div>
        </div>

        <div
          class="bg-white/30 dark:bg-gray-800/30 backdrop-blur-sm rounded-lg shadow-lg shadow-[--primary]/10 p-6 md:p-8border-2 border border-gray-200/10"
        >
          <h2
            class="text-xl md:text-2xl font-bold mb-6 text-black dark:text-white"
          >
            Informações Básicas
          </h2>
          <div class="space-y-6">
            <EditableField
              userID={user.id}
              field="name"
              name="Nome"
              type="text"
              value={user.name}
            />
            <EditableField
              userID={user.id}
              field="email"
              name="Email"
              type="email"
              value={user.email}
            />
            <EditableField
              userID={user.id}
              field="location"
              name="Localização"
              type="text"
              value={user.location}
            />
          </div>
        </div>
      </aside>

      <!-- Coluna da Direita: Bio, Links e Habilidades -->
      <div class="space-y-8">
        <div
          class="bg-white/30 dark:bg-gray-800/30 backdrop-blur-sm rounded-lg shadow-lg shadow-[--primary]/10 p-6 md:p-8border-2 border border-gray-200/10"
        >
          <h2
            class="text-xl md:text-2xl font-bold mb-6 text-black dark:text-white"
          >
            Sobre
          </h2>
          <div class="space-y-6">
            <EditableField
              userID={user.id}
              field="bio"
              name="Bio"
              type="text"
              value={user.bio}
            />
            <EditableField
              userID={user.id}
              field="skills"
              name="Habilidades"
              type="json"
              value={user.skills}
            />
          </div>
        </div>

        <div
          class="bg-white/30 dark:bg-gray-800/30 backdrop-blur-sm rounded-lg shadow-lg shadow-[--primary]/10 p-6 md:p-8border-2 border border-gray-200/10"
        >
          <h2
            class="text-xl md:text-2xl font-bold mb-6 text-black dark:text-white"
          >
            Links
          </h2>
          <div class="space-y-6">
            <EditableField
              userID={user.id}
              field="website"
              name="Website"
              type="url"
              value={user.website}
            />
            <EditableField
              userID={user.id}
              field="social_links"
              name="Links Sociais"
              type="json"
              value={user.social_links}
            />
          </div>
        </div>

        <!-- Botões de Ação -->
        <div
          class="bg-white/30 dark:bg-gray-800/30 backdrop-blur-sm rounded-lg shadow-lg shadow-[--primary]/10 p-6 md:p-8border-2 border border-gray-200/10"
        >
          <h2
            class="text-xl md:text-2xl font-bold mb-6 text-black dark:text-white"
          >
            Ações da Conta
          </h2>
          <div
            class="flex flex-col md:flex-row items-center justify-center gap-4"
          >
            <button
              onclick="signOut()"
              class="px-6 py-2 bg-[--noir-core] rounded-lg border-2 border-[--primary] text-[--blanc-core] hover:bg-gradient-to-r hover:from-[--primary] hover:to-[--secondary] transition-all duration-300 hover:shadow-lg hover:shadow-[--primary]/20 font-medium w-full md:w-auto"
            >
              Sign Out
            </button>
            <button
              onclick="document.getElementById('deleteAccountDialog').showModal()"
              class="px-6 py-2 bg-[--noir-core] rounded-lg border-2 border-[--error] text-[--error] hover:bg-[--error] hover:text-[--blanc-core] transition-all duration-300 hover:shadow-lg hover:shadow-[--error]/20 font-medium w-full md:w-auto"
            >
              Delete Account
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>
  <ConfirmDialog
    id="deleteAccountDialog"
    title="Delete Account"
    message="Are you sure you want to delete this account?"
  >
    <button
      class="px-6 py-2 bg-[--noir-core] rounded-lg border-2 border-[--error] text-[--error] hover:bg-[--error] hover:text-[--blanc-core] transition-all duration-300 hover:shadow-lg hover:shadow-[--error]/20 font-medium w-full md:w-auto"
      onclick={`deleteUser('${userId}')`}>Confirm</button
    >
  </ConfirmDialog>
</Layout>

<script>
  import { actions } from "astro:actions";

  declare global {
    interface Window {
      deleteUser: (id: string) => Promise<void>;
      signOut: () => Promise<void>;
    }
  }

  document.addEventListener("astro:page-load", () => {
    window.deleteUser = async (id) => {
      try {
        const response = await actions.user.deleteUser({ id });

        if (!response.data?.success) {
          console.error("Failed to delete user:", response.error);
        }

        document.cookie = "blogii_user_id=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/";
        window.location.href = "/";

        /* const signOutResponse = await actions.auth.signOut();

        if (!signOutResponse.data?.success) {
          console.error("Failed to sign out:", signOutResponse.error);
        } else {
          window.location.href = signOutResponse?.data?.redirectTo;
        } */
      } catch (error) {
        console.error("Failed to delete user:", error);
      }
    };
  });
</script>
