---
import Head from "@components/Head.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";

interface Props {
    title: string;
    description?: string;
    hideHeaderFooter?: boolean;
    lang: string;
}

const { title, description, hideHeaderFooter, lang } = Astro.props;
---

<html {lang}>
    <Head {title} {description} />
    <body>
       <!--  <script>
            import { localBlogDB } from "@services/indexedDB";

            // Initialize IndexedDB
            const initDB = async () => {
                try {
                    await localBlogDB.init();
                    const blogs = await localBlogDB.getAllBlogs();
                } catch (err) {
                    console.error('Error initializing IndexedDB:', err);
                    // If database is blocked, try to close it and retry
                    if (err instanceof Error && err.name === 'InvalidStateError') {
                        try {
                            await localBlogDB.close();
                            await localBlogDB.init();
                        } catch (retryErr) {
                            console.error('Retry failed:', retryErr);
                        }
                    }
                }
            };

            initDB();

            // Limpar cache ao desmontar
            window.addEventListener("unload", () => {
                localBlogDB.close();
            });
        </script> -->
        {!hideHeaderFooter && <Header {lang} />}
        <div>
            <slot />
        </div>
        {!hideHeaderFooter && <Footer />}
    </body>
</html>

<style is:global>
    @font-face {
        font-family: "Atkinson";
        src: url("/fonts/atkinson-regular.woff") format("woff");
        font-weight: 400;
        font-style: normal;
        font-display: fallback;
    }

    @font-face {
        font-family: "Atkinson";
        src: url("/fonts/atkinson-bold.woff") format("woff");
        font-weight: 700;
        font-style: normal;
        font-display: fallback;
    }

    :root {
        color-scheme: light;

        --bg-color: #2c2c2c;
        --bg-color2: #010024;

        --text-color: #333b3c;
        --text-color2: #ededed;

        --orange-blue: #010024;
        --gray: #1c1c1c;

        --primary: #ff6200;
        --primary-dark: #ff7c3a57;

        --black: 15, 18, 25;
        --gray: 96, 115, 159;
        --gray-light: 229, 233, 240;
        --gray-dark: 34, 41, 57;
        --gray-gradient: rgba(var(--gray-light), 50%), #fff;
        --box-shadow: 0 2px 6px rgba(var(--gray), 25%),
            0 8px 24px rgba(var(--gray), 33%),
            0 16px 32px rgba(var(--gray), 33%);
    }

    html {
        scroll-behavior: smooth;
        transition:
            background-color 0.2s ease,
            color 0.2s ease;

        &.dark {
            color-scheme: dark;

            --bg-color: #212121;
            --bg-color2: #ededed;

            --text-color: #efefec;
            --text-color2: #010024;

            --orange-blue: var(--orange);
        }

        @media (prefers-reduced-motion: reduce) {
            scroll-behavior: auto;
        }
    }

    body {
        font-family: "Atkinson", sans-serif;
        margin: 0;
        padding: 0;
        text-align: left;
        background: linear-gradient(var(--gray-gradient)) no-repeat;
        background-size: 100% 600px;
        word-wrap: break-word;
        overflow-wrap: break-word;
        color: rgb(var(--gray-dark));
        font-size: 20px;
        line-height: 1.7;
    }
    main {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
    }
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        margin: 0 0 0.5rem 0;
        color: rgb(var(--black));
        line-height: 1.2;
    }
    h1 {
        font-size: 3.052em;
    }
    h2 {
        font-size: 2.441em;
    }
    h3 {
        font-size: 1.953em;
    }
    h4 {
        font-size: 1.563em;
    }
    h5 {
        font-size: 1.25em;
    }
    strong,
    b {
        font-weight: 700;
    }
    a {
        color: var(--primary);
    }
    .link {
        color: #0088ff;
    }
    a:hover {
        color: var(--primary);
    }
    p {
        margin-bottom: 1em;
    }
    .prose p {
        margin-bottom: 2em;
    }
    textarea {
        width: 100%;
        font-size: 16px;
    }
    input {
        font-size: 16px;
    }
    table {
        width: 100%;
    }
    img {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
    }
    code {
        padding: 2px 5px;
        background-color: rgb(var(--gray-light));
        border-radius: 2px;
    }
    pre {
        padding: 1.5em;
        border-radius: 8px;
    }
    pre > code {
        all: unset;
    }
    blockquote {
        border-left: 4px solid var(--primary);
        padding: 0 0 0 20px;
        margin: 0px;
        font-size: 1.333em;
    }
    hr {
        border: none;
        border-top: 1px solid rgb(var(--gray-light));
    }
    @media (max-width: 720px) {
        body {
            font-size: 18px;
        }
        main {
            padding: 1em;
        }
    }

    button:disabled {
        opacity: 0.6;

        &:hover {
            color: var(--bg-color);
        }
    }

    .sr-only {
        border: 0;
        padding: 0;
        margin: 0;
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        /* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */
        clip: rect(1px 1px 1px 1px);
        /* maybe deprecated but we need to support legacy browsers */
        clip: rect(1px, 1px, 1px, 1px);
        /* modern browsers, clip-path works inwards from each corner */
        clip-path: inset(50%);
        /* added line to stop words getting smushed together (as they go onto separate lines and some screen readers do not understand line feeds as a space */
        white-space: nowrap;
    }
</style>
