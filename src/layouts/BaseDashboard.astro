---
import Head from "@/components/Head.astro";

interface Props {
  title: string;
  description?: string;
  lang: string;
  theme?: string;
}

const { title, description, lang, theme } = Astro.props;

const currentPage = Astro.url.pathname.split("/").filter(Boolean).at(-1);
const styles = "bg-gradient-to-b from-[--primary] to-[--secondary]";
---

<html {lang} data-theme={theme} class="scroll-smooth">
  <Head {title} description={description || ""} />
  <body
    class={`min-h-screen flex flex-col relative ${currentPage !== "dashboard" ? styles : ""}`}
  >
    <main>
      <slot />
    </main>
  </body>
</html>

<style is:global>
  @font-face {
    font-family: "Atkinson";
    src: url("/fonts/atkinson-regular.woff") format("woff");
    font-weight: 400;
    font-style: normal;
    font-display: fallback;
  }

  @font-face {
    font-family: "Atkinson";
    src: url("/fonts/atkinson-bold.woff") format("woff");
    font-weight: 700;
    font-style: normal;
    font-display: fallback;
  }

  :root {
    color-scheme: dark;

    --bg-color: #2c2c2c;
    --bg-color2: #010024;

    --noir-core: #262626;
    --blanc-core: #ededed;

    --orange-blue: #010024;
    --gray: #1c1c1c;

    --primary: #561aa7;
    --sub-primary: #2e0861;
    --secondary: #ff7c3a;
    --primary-hsl: 276 83% 21%;
    --secondary-hsl: 24 100% 61%;
    --error: #ff7575;
    --helper: #ffc107;
  }

  body {
    font-family: "Atkinson", sans-serif;
    margin: 0;
    padding: 0;
    text-align: left;
    background: url("/background.svg") no-repeat center/cover;
    word-wrap: break-word;
    overflow-wrap: break-word;
    color: var(--noir-core);
    font-size: 20px;
    line-height: 1.7;
    -ms-overflow-style: none;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin: 0;
    color: var(--noir-core);
    line-height: 1.2;
  }
  h1 {
    font-size: 3.052em;
  }
  h2 {
    font-size: 2.441em;
  }
  h3 {
    font-size: 1.953em;
  }
  h4 {
    font-size: 1.563em;
  }
  h5 {
    font-size: 1.25em;
  }
  strong,
  b {
    font-weight: 700;
  }
  p {
    color: var(--text-primary);
    margin-bottom: 1em;
  }
  .prose p {
    margin-bottom: 2em;
  }
  textarea {
    width: 100%;
    font-size: 16px;
  }
  input {
    font-size: 16px;
  }
  table {
    width: 100%;
  }
  img {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
  }
  code {
    padding: 2px 5px;
    background-color: rgb(var(--gray-light));
    border-radius: 2px;
  }
  pre {
    padding: 1.5em;
    border-radius: 8px;
  }
  pre > code {
    all: unset;
  }
  blockquote {
    border-left: 4px solid var(--primary);
    padding: 0 0 0 20px;
    margin: 0px;
    font-size: 1.333em;
  }
  hr {
    border: none;
    border-top: 1px solid rgb(var(--gray-light));
  }

  button:disabled {
    opacity: 0.6;

    &:hover {
      color: var(--bg-color);
    }
  }

  .sr-only {
    border: 0;
    padding: 0;
    margin: 0;
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    /* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */
    clip: rect(1px 1px 1px 1px);
    /* maybe deprecated but we need to support legacy browsers */
    clip: rect(1px, 1px, 1px, 1px);
    /* modern browsers, clip-path works inwards from each corner */
    clip-path: inset(50%);
    /* added line to stop words getting smushed together (as they go onto separate lines and some screen readers do not understand line feeds as a space */
    white-space: nowrap;
  }

  /* Classes reutilizáveis para efeitos de hover e transições */
  .interactive-link {
    transform: translateY(0);
    transition: all 0.3s ease;
  }

  .interactive-link:hover {
    transform: translateY(-2px);
    background-color: rgba(255, 255, 255, 0.05);
    border-radius: 4px;
  }

  .gradient-underline-text {
    position: relative;
    display: inline-block;
  }

  .gradient-underline-text::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -2px;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, var(--primary), var(--secondary));
    transition: width 0.3s ease;
  }

  .interactive-link:hover .gradient-underline-text::after,
  .gradient-underline-text.active::after {
    width: 100%;
  }

  .gradient-underline-active {
    position: relative;
    display: inline-block;
  }

  .gradient-underline-active::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -2px;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, var(--primary), var(--secondary));
  }
  /* Theme overrides */
  [data-theme="default"] {
    --primary: #561aa7;
    --secondary: #ff7c3a;
    --text-primary: #fafafa;
    --text-secondary: #2c2c2c;
    --helper: #ffc107;
  }
  [data-theme="dark"] {
    --primary: #252525;
    --secondary: #ff7c3a;
    --text-primary: #faf5f6;
    --text-secondary: #2c2c2c;
    --helper: #ffc107;
  }
  [data-theme="light"] {
    --primary: #fafafa;
    --secondary: #ff9800;
    --text-primary: #2c2c2c;
    --text-secondary: #1a73e8;
    --helper: #555;
  }
  [data-theme="Abyss"] {
    --primary: #8a2be2;
    --secondary: #1a002d;
    --text-primary: #f5f5f5;
    --text-secondary: #c2c2c2;
    --helper: #a855f7;
  }
  [data-theme="Aurora"] {
    --primary: #8b5cf6;
    --secondary: #1e3a8a;
    --text-primary: #f5f5f5;
    --text-secondary: #d1d5db;
    --helper: #60a5fa;
  }
  [data-theme="Emerald"] {
    --primary: #10b981;
    --secondary: #064e3b;
    --text-primary: #f0fdf4;
    --text-secondary: #d1fae5;
    --helper: #34d399;
  }
  [data-theme="hell"] {
    --primary: #f97316;
    --secondary: #7f1d1d;
    --text-primary: #fff7ed;
    --text-secondary: #ffe4e6;
    --helper: #fb923c;
  }
  [data-theme="funky"] {
    --primary: #eb004e;
    --secondary: #00bcd4;
    --text-primary: #fafafa;
    --text-secondary: #2c2c2c;
    --helper: #a7ffeb;
  }
</style>
