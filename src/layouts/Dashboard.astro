---
import LayoutBase from "./BaseDashboard.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "@/lib/consts";
import { generateShortNumericId } from "@/lib/utils";
import { getDashboardContextOfTheBlog, loadUserBlogsData } from "@/lib/utilsDB";
import Breadcrumb from "@/components/Breadcrumb.astro";
import PublishButton from "@/components/PublishButton.astro";
import SideBarBlog from "../components/SideBarBlog.astro";
import MobileMenu from "../components/MobileMenu.astro";
import MobileMenuButton from "../components/MobileMenuButton.astro";
import { icons } from "@/components/Editing/icons";

const editing = Astro.url.searchParams.get("editing");
const idLoginModal = generateShortNumericId();

const ctx = await getDashboardContextOfTheBlog(Astro);
if (ctx.redirect) return Astro.redirect(ctx.redirect);

const { lang, blogId, blogData, user } = ctx;

const userBlogs = await loadUserBlogsData(user, Astro);
const isAuthorized = Boolean(user?.id);
const currentPage = Astro.url.pathname.split("/").filter(Boolean).at(-1);
---

<LayoutBase
  title={SITE_TITLE}
  description={SITE_DESCRIPTION}
  lang={String(lang)}
  theme={blogData?.theme}
>
  <section class="flex flex-col mx-auto mb-20 min-h-screen dashboard-container">
    <div
      class="fixed top-0 left-0 right-0 z-40 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md shadow-sm border-b border-gray-100/50 dark:border-gray-800/50"
    >
      <div
        class="flex items-center justify-between max-w-screen-2xl mx-auto px-4 py-3 h-16"
      >
        <Breadcrumb
          {userBlogs}
          currentBlog={blogData}
          {isAuthorized}
          editing={Boolean(editing)}
          lang={String(lang)}
        />
        <div class="flex items-center gap-2">
          <MobileMenuButton />

          {
            currentPage !== "dashboard" && blogData && (
              <a href={`/${lang}/${blogData.title}`} target="_blank">
                <button class="px-3 text-white flex items-center gap-2">
                  <span set:html={icons.visit} />
                  Visitar
                </button>
              </a>
            )
          }
          {
            currentPage !== "dashboard" &&
              blogData &&
              blogData.posts &&
              blogData.posts.length > 0 && (
                <PublishButton
                  id={idLoginModal}
                  blogData={blogData}
                  {isAuthorized}
                  {lang}
                />
              )
          }
        </div>
      </div>
    </div>

    <div class="mt-20 gap-4">
      <div class="flex flex-col md:flex-row gap-2">
        <SideBarBlog
          lang={String(lang)}
          blogId={String(blogId)}
          isAuthorized={isAuthorized}
        />
        <section class="flex-1 min-w-0 mx-3">
          <slot />
        </section>
      </div>
    </div>

    <!-- Menu Mobile (fora do header para poder aparecer embaixo) -->
    <MobileMenu
      lang={String(lang)}
      blogId={String(blogId)}
      isAuthorized={isAuthorized}
    />
  </section>
</LayoutBase>
